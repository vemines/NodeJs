////  Access Api  ////
access-1 for small app
access-2 for large system using rsa -> long time check token

this project use access-1

////  Upload  ////
Upload image to cloudinary, free tier is good

////  Rule name function  ////
Controller: handleFunctionName
Service: functionName 
Repository: mongoose function use

////  Instance in class with static, this  ////
class Car {
    constructor(model, year) {
        this.model = model;
        this.year = year;
    }

    startEngine() {
        const wheels = Car.numberOfWheels();    // the static function only call by Class. , and can't access this.model.
        return `${this.model} engine started. This car has ${wheels} wheels.`;
    }

    static numberOfWheels() {
        return 4;
    }
}
const myCar = new Car('Toyota', 2020);
console.log(myCar.numberOfWheels()); // Throws an error because numberOfWheels is not a method of the instance

openssl genrsa -out private_key.pem 2048
openssl rsa -pubout -in private_key.pem -out public_key.pem

////  mongoose  ////
// $elemMatch query element matches a specified condition in array
cart_products: { $elemMatch: { prod_id: prod_id } }

// populate return Array replace field with doc it refence to with specific field
.populate('prod_shop', 'prod_name prod_email -_id')

// _id includes a timestamp it create
.sort({ _id: -1 }) // sort descending (1 is ascending )

// add $addToSet to "update" object after checking refresh_token
const update = { public_key, private_key, refresh_token };
if (token.refresh_token !== "") update.$addToSet = { refresh_tokens_used: foundToken.refresh_token };